#!/bin/bash

echo_task() {
  printf "\033[0;34m--> %s\033[0m\n" "$@"
}

set -euo pipefail

if chezmoi --version &>/dev/null; then
  echo_task "Updating dotfiles"
  chezmoi update --apply=false
  chezmoi init --apply
fi

echo_task "Updating APT packages"
sudo apt update -y
sudo apt full-upgrade -y
sudo apt autoremove -y

if snap warnings &>/dev/null; then
  echo_task "Updating Snap packages"
  sudo snap refresh
fi

echo_task "Updating Homebrew packages"
function brew() {
  bash <<EOM
  if [ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
    eval "\$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  elif [ -f "\$HOME/.linuxbrew/bin/brew" ]; then
    eval "\$("\$HOME/.linuxbrew/bin/brew" shellenv)"
  else
    echo "Homebrew is not installed." >&2
    exit 1
  fi
  brew $@
EOM
}
brew upgrade

echo_task "Updating Antigen"
curl -fsSL https://git.io/antigen --create-dirs -o "$HOME/.antigen/antigen.zsh"

echo_task "Updating Antigen packages"
antigen() {
  zsh <<EOM
  if [ -f "\$HOME/.antigenrc" ]; then
    source "\$HOME/.antigenrc"
  else
    echo "The .antigenrc was not found." >&2
    exit 1
  fi
  antigen $@
EOM
}
antigen update

echo_task "Updating npm packages"
npm update --global

echo_task "Updating SDKMAN!"
function sdk() {
  bash <<EOM
  if [ -f "\$HOME/.sdkman/bin/sdkman-init.sh" ]; then
    export SDKMAN_DIR="\$HOME/.sdkman"
    . "\$HOME/.sdkman/bin/sdkman-init.sh"
  else
    echo "SDKMAN! is not installed." >&2
    exit 1
  fi
  sdk $@
EOM
}
sdk selfupdate

echo_task "Updating SDKMAN! packages"
sdk update

echo_task "Updating deno"
deno upgrade
