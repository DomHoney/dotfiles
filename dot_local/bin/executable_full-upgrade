#!/bin/bash

set -euo pipefail

echo_task() {
  printf "\033[0;34m--> %s\033[0m\n" "$@"
}

brew() {
  bash <<EOM
  if [ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
    eval "\$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  elif [ -f "\$HOME/.linuxbrew/bin/brew" ]; then
    eval "\$("\$HOME/.linuxbrew/bin/brew" shellenv)"
  else
    echo "brew is not installed" >&2
    exit 127
  fi
  brew $@
EOM
}

nvm() {
  bash <<EOM
  export NVM_DIR="\$([ -z "\${XDG_CONFIG_HOME-}" ] && printf %s "\${HOME}/.nvm" || printf %s "\${XDG_CONFIG_HOME}/nvm")"
  if [ -f "\$NVM_DIR/nvm.sh" ]; then
    . "\$NVM_DIR/nvm.sh"
  else
    echo "nvm is not installed" >&2
    exit 127
  fi
  nvm $@
EOM
}

sdk() {
  bash <<EOM
  export SDKMAN_DIR="\$HOME/.sdkman"
  if [ -f "\$SDKMAN_DIR/bin/sdkman-init.sh" ]; then
    . "\$SDKMAN_DIR/bin/sdkman-init.sh"
  else
    echo "sdk is not installed" >&2
    exit 127
  fi
  sdk $@
EOM
}

antigen() {
  zsh <<EOM
  if [ -f "\$HOME/.antigenrc" ]; then
    source "\$HOME/.antigenrc"
  else
    echo "The .antigenrc was not found." >&2
    exit 1
  fi
  antigen $@
EOM
}

yellow() {
  printf "\e[33;1m$*\e[m\n"
}

c() {
  yellow "+ $*"
  "$@"
}

if chezmoi --version &>/dev/null; then
  echo_task "Updating dotfiles"
  c chezmoi update --apply=false
  c chezmoi init --apply
fi

echo_task "Updating apt packages"
c sudo apt update -y
c sudo apt full-upgrade -y --autoremove

if snap warnings &>/dev/null; then
  echo_task "Updating snap packages"
  c sudo snap refresh
fi

echo_task "Updating brew packages"
c brew upgrade

echo_task "Updating antigen"
c curl -fsSL https://git.io/antigen --create-dirs -o "$HOME/.antigen/antigen.zsh"

echo_task "Updating antigen packages"
c antigen update

if deno --version &>/dev/null; then
  echo_task "Updating deno"
  c deno upgrade
fi

if volta --version &>/dev/null; then
  echo_task "Updating volta"
  yellow '+ bash -c "$(curl -fsSL https://get.volta.sh)" -- --skip-setup'
  bash -c "$(curl -fsSL https://get.volta.sh)" -- --skip-setup
fi

if nvm --version &>/dev/null; then
  echo_task "Updating nvm"
  yellow '+x PROFILE=/dev/null bash -c "$(curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh)"'
  PROFILE=/dev/null bash -c "$(curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh)"
fi

if volta --version &>/dev/null; then
  echo_task "Updating node with volta"
  c volta install node

elif nvm --version &>/dev/null; then
  echo_task "Updating node with nvm"
  c nvm install 'lts/*' --reinstall-packages-from=current
  c nvm alias default 'lts/*'
fi

if npm --version &>/dev/null; then
  echo_task "Updating npm packages"
  c npm update --global
fi

if sdk version &>/dev/null; then
  echo_task "Updating sdk"
  c sdk selfupdate

  echo_task "Updating sdk packages"
  c sdk update
fi
